{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Costas project's Library The aim of this library is to support the study and analysis of long-term variable stars; the ones that are characterized by long-term flux variations on time scales of many years or various decades, and small amplitudes in visual flux. Modules The modules are divided in 2 large groups: Detection and Classification. Detection Here we found the tools for data acquisition , with the objective of parse the light curve's data; Preprocessing , where remove non-eligible stars by position and magnitude can be done, also remove outlier values from light curves; features extraction , wich is usefull for statistics and curve fit; and selection , extracting only the long-term variable stars. Classifications Install with pip To install this package open a terminal and use pip install _______________> Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Home"},{"location":"#welcome-to-costas-projects-library","text":"The aim of this library is to support the study and analysis of long-term variable stars; the ones that are characterized by long-term flux variations on time scales of many years or various decades, and small amplitudes in visual flux.","title":"Welcome to Costas project's Library"},{"location":"#modules","text":"The modules are divided in 2 large groups: Detection and Classification.","title":"Modules"},{"location":"#detection","text":"Here we found the tools for data acquisition , with the objective of parse the light curve's data; Preprocessing , where remove non-eligible stars by position and magnitude can be done, also remove outlier values from light curves; features extraction , wich is usefull for statistics and curve fit; and selection , extracting only the long-term variable stars.","title":"Detection"},{"location":"#classifications","text":"","title":"Classifications"},{"location":"#install-with-pip","text":"To install this package open a terminal and use pip install _______________>","title":"Install with pip"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"about/","text":"Peritura et clamare tremit vox vultu Caune Quid frontem genus sollertia adloquitur subito Lorem markdownum terram datae sunt levatus nodosaque ardebat arbor, alias. Cognosces caelum adest; annis, tum invia docebo virgo . Mundi siquid lacrimarum dicentem et adsuerat dextroque quaedam faciat saligno, altus! Nam tundunt viros, non campis, spes inque quoque. In manus Quam non iustius Hostibus in tibi sublimis flexit Ambagum est aliisque tremulo nutrit quod Forma doli Latoidos mihi quaedam fisso: vix es saepe si armataque. Creatas fluens! Fluunt inpressa rivi ferrum posito pastor superabitur maior, et donec adeo. Nec fratres sors quoque Aegyptia ab mixta liber: amoris caede furiis aut fido quam et tunc, quid. Fatorum licet iugulum pisa fugit minus mihi De nigro maturo veri, sors levis ecce manebat. Tellus septem mora, valentius densus victa duorum ad curvi mihi potuisse: per. Quaerebatque altus proxima sonat aevo plenissima sine; nec pulsant, inplicat tollens ducem et Libys et. Visa vixque est Arcas momordi relinquent: herba Daedale vagina Maenalon habent. Sic ille contigit lauro precatur iuventa cavernis est vestigia more. scrollingParallelUrl(vpi_hard_copyright + symbolic_exif_toolbar, 3 + 2 / bpsLeopard + wais); key -= 65; cameraZeroNat += namespace_alignment; if (cpsInstallSearch + 417099) { serp_ergonomics += duplex_operating_tweet; } log += web_ntfs_commercial; Si victrix, alioque dixit, probat oraque dum huius. Nunc recessu quaerere et delere comantur urbem raptam forte fata. Velox quid, se forte ruricolam Neretum o fecit conata dissimulare Venus murra cur classe erit incerti. Eventus animum aestu heu cumque, quod olivis sparsi partes linguae mollescat et plura . Vel poscis, caelestia sorore Scylla reliquit durare haec fraudat; loquentem. Coniuge deam Cuspide sacra gaudia , Ephyre sucoque: Priamo illa bicorni. Torque di nec reddit poni dissuadet violasse boum facerent constat, ripae forma. Hostem non Iovisque tangi, intra. Duce vanis auctor quater et virtute praelata ignes quotiensque Elide ! debugger_tablet_reality.in = adsl(binHoneypot(mouse, 18, phishingCardVlog + copyrightOnAddress)); printer.metal_graphics *= json_card_open(dockingVlogCrop(clipboard, vci_peopleware_footer) + workstation, wysiwygUserIndex( alertCrossplatformBounce, 21), e); hover(excel_visual - utf_processor, interlaced_adf + arraySocialSystem, scsi / pack_abend); Corporibus Iuli, vestigatque miserae possunt inquit tamen mavult innumeraeque esse et fratri texitur! Bracchia de Peleus Tritonida dedit constitit est intrarant anhelis obvia Musa Euandri, audax. Quadrupedes deos iuvencae. Pallor quae tum venabula, capellas et montes Hippocoon Achivos multa portus.","title":"Peritura et clamare tremit vox vultu Caune"},{"location":"about/#peritura-et-clamare-tremit-vox-vultu-caune","text":"","title":"Peritura et clamare tremit vox vultu Caune"},{"location":"about/#quid-frontem-genus-sollertia-adloquitur-subito","text":"Lorem markdownum terram datae sunt levatus nodosaque ardebat arbor, alias. Cognosces caelum adest; annis, tum invia docebo virgo . Mundi siquid lacrimarum dicentem et adsuerat dextroque quaedam faciat saligno, altus! Nam tundunt viros, non campis, spes inque quoque. In manus Quam non iustius Hostibus in tibi sublimis flexit Ambagum est aliisque tremulo nutrit quod Forma doli Latoidos mihi quaedam fisso: vix es saepe si armataque. Creatas fluens! Fluunt inpressa rivi ferrum posito pastor superabitur maior, et donec adeo. Nec fratres sors quoque Aegyptia ab mixta liber: amoris caede furiis aut fido quam et tunc, quid.","title":"Quid frontem genus sollertia adloquitur subito"},{"location":"about/#fatorum-licet-iugulum-pisa-fugit-minus-mihi","text":"De nigro maturo veri, sors levis ecce manebat. Tellus septem mora, valentius densus victa duorum ad curvi mihi potuisse: per. Quaerebatque altus proxima sonat aevo plenissima sine; nec pulsant, inplicat tollens ducem et Libys et. Visa vixque est Arcas momordi relinquent: herba Daedale vagina Maenalon habent. Sic ille contigit lauro precatur iuventa cavernis est vestigia more. scrollingParallelUrl(vpi_hard_copyright + symbolic_exif_toolbar, 3 + 2 / bpsLeopard + wais); key -= 65; cameraZeroNat += namespace_alignment; if (cpsInstallSearch + 417099) { serp_ergonomics += duplex_operating_tweet; } log += web_ntfs_commercial; Si victrix, alioque dixit, probat oraque dum huius. Nunc recessu quaerere et delere comantur urbem raptam forte fata. Velox quid, se forte ruricolam Neretum o fecit conata dissimulare Venus murra cur classe erit incerti. Eventus animum aestu heu cumque, quod olivis sparsi partes linguae mollescat et plura . Vel poscis, caelestia sorore Scylla reliquit durare haec fraudat; loquentem.","title":"Fatorum licet iugulum pisa fugit minus mihi"},{"location":"about/#coniuge-deam","text":"Cuspide sacra gaudia , Ephyre sucoque: Priamo illa bicorni. Torque di nec reddit poni dissuadet violasse boum facerent constat, ripae forma. Hostem non Iovisque tangi, intra. Duce vanis auctor quater et virtute praelata ignes quotiensque Elide ! debugger_tablet_reality.in = adsl(binHoneypot(mouse, 18, phishingCardVlog + copyrightOnAddress)); printer.metal_graphics *= json_card_open(dockingVlogCrop(clipboard, vci_peopleware_footer) + workstation, wysiwygUserIndex( alertCrossplatformBounce, 21), e); hover(excel_visual - utf_processor, interlaced_adf + arraySocialSystem, scsi / pack_abend); Corporibus Iuli, vestigatque miserae possunt inquit tamen mavult innumeraeque esse et fratri texitur! Bracchia de Peleus Tritonida dedit constitit est intrarant anhelis obvia Musa Euandri, audax. Quadrupedes deos iuvencae. Pallor quae tum venabula, capellas et montes Hippocoon Achivos multa portus.","title":"Coniuge deam"},{"location":"clustering/","text":"","title":"Clustering"},{"location":"crossmatching/","text":"","title":"Cross-matching"},{"location":"datadq/","text":"Data Acquisition Module Here are found the functions that help to gather the data from the source. parser(data) It filters the input list of strings with a pattern adjusted to the ASAS format '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME' saving all the values found to a structure, with the right ascension and declination, that is converted to a table and returned. Args data(list) : The list of strings of the text in a ASAS register. Returns astropy.table.table.Table : The light curve's data information: DEC, FRAME,GRADE, HJD, MAG_0, MAG_1, MAG_2, MAG_3, MAG_4, MER_0, MER_1, MER_2, MER_3, MER_4 and RA. Example The input data: data = [ '#nskip_4= 0\\n', '#ra= 17.000018 17:00:00.1\\n', '#dec= -24.121600 -24:07:17.8\\n', '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME\\n', ' 2140.48752 12.253 12.299 12.194 12.162 12.187 0.020 0.038 0.017 0.018 0.021 A 30120\\n', ' 2384.87500 11.893 11.977 11.846 11.806 11.814 0.018 0.034 0.019 0.021 0.024 A 773\\n', ' 2385.89474 11.916 12.083 11.843 11.807 11.784 0.034 0.057 0.032 0.034 0.040 D 984\\n'] The return: HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 ... MER_2 MER_3 MER_4 GRADE FRAME float64 float64 float64 float64 float64 float64 ... float64 float64 float64 str1 int64 2140.48752 12.253 12.299 12.194 12.162 12.187 ... 0.017 0.018 0.021 A 30120 2384.87500 11.893 11.977 11.846 11.806 11.814 ... 0.019 0.021 0.024 A 773 2385.89474 11.916 12.083 11.843 11.807 11.784 ... 0.032 0.034 0.040 D 984","title":"Data acquisition"},{"location":"datadq/#data-acquisition-module","text":"Here are found the functions that help to gather the data from the source.","title":"Data Acquisition Module"},{"location":"datadq/#parserdata","text":"It filters the input list of strings with a pattern adjusted to the ASAS format '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME' saving all the values found to a structure, with the right ascension and declination, that is converted to a table and returned.","title":"parser(data)"},{"location":"datadq/#args","text":"data(list) : The list of strings of the text in a ASAS register.","title":"Args"},{"location":"datadq/#returns","text":"astropy.table.table.Table : The light curve's data information: DEC, FRAME,GRADE, HJD, MAG_0, MAG_1, MAG_2, MAG_3, MAG_4, MER_0, MER_1, MER_2, MER_3, MER_4 and RA.","title":"Returns"},{"location":"datadq/#example","text":"The input data: data = [ '#nskip_4= 0\\n', '#ra= 17.000018 17:00:00.1\\n', '#dec= -24.121600 -24:07:17.8\\n', '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME\\n', ' 2140.48752 12.253 12.299 12.194 12.162 12.187 0.020 0.038 0.017 0.018 0.021 A 30120\\n', ' 2384.87500 11.893 11.977 11.846 11.806 11.814 0.018 0.034 0.019 0.021 0.024 A 773\\n', ' 2385.89474 11.916 12.083 11.843 11.807 11.784 0.034 0.057 0.032 0.034 0.040 D 984\\n'] The return: HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 ... MER_2 MER_3 MER_4 GRADE FRAME float64 float64 float64 float64 float64 float64 ... float64 float64 float64 str1 int64 2140.48752 12.253 12.299 12.194 12.162 12.187 ... 0.017 0.018 0.021 A 30120 2384.87500 11.893 11.977 11.846 11.806 11.814 ... 0.019 0.021 0.024 A 773 2385.89474 11.916 12.083 11.843 11.807 11.784 ... 0.032 0.034 0.040 D 984","title":"Example"},{"location":"dimred/","text":"","title":"Dimensional reduction"},{"location":"features/","text":"Features Extraction Module Here are found the functions that help to extract the data's features. get_statistics(t,y) Obtain characteristics parameters performing linear and parabolic fit, m_{linear} and m_{parabolic} , respectively, with m_{linear} = (a_0 \\pm e_{a_0})+(a_1 \\pm e_{a_1})t m_{parabolic} = (b_0 \\pm e_{b_0})+(b_1 \\pm e_{b_1})t + (b_2 \\pm e_{b_2})t^2 Where m_{fit\\ type} represents the magnitude, meanwhile a_0 , a_1 , b_0 , b_1 and b_2 are the coefficients of each adjust; e_{a_0} , e_{a_1} , e_{b_0} , e_{b_1} and e_{b_2} are the coefficient's errors. With these we obtain Q_1' and Q_2' for each adjust Q_1' = \\frac{a_1}{e_{a_1}} Q_2' = \\frac{b_2}{e_{a_2}} and indicators C_1 and C_2 C_1 = 1 - \\frac{DEFL}{DEP} C_2 = 1 - \\frac{DEFP}{DEFL} where DEP = \\sqrt{ \\sum_i^n \\frac{(y_i-\\bar{y})^2}{n}} DEFL = \\sqrt{ \\sum_i^n \\frac{(y_{i}^{lfit}-\\bar{y}^{lfit})^2}{n}} DEFP = \\sqrt{ \\sum_i^n \\frac{(y_{i}^{pfit}-\\bar{y}^{pfit})^2}{n}} are the magnitude, linear fit and parabolic fit standard deviation for each one. Args t(np.narray) : The HJD data to analyze. y(np.narray) : The MAG data to analyze. Returns list : Q1', C1, Q2' and C2, respectively. get_ra_dec(data) get the right ascension and declination of the input data. Args data(astropy.table.table.Table) : The data to analyze. Returns tuple : The RA and DEC of data, respectively.","title":"Features extraction"},{"location":"features/#features-extraction-module","text":"Here are found the functions that help to extract the data's features.","title":"Features Extraction Module"},{"location":"features/#get_statisticsty","text":"Obtain characteristics parameters performing linear and parabolic fit, m_{linear} and m_{parabolic} , respectively, with m_{linear} = (a_0 \\pm e_{a_0})+(a_1 \\pm e_{a_1})t m_{parabolic} = (b_0 \\pm e_{b_0})+(b_1 \\pm e_{b_1})t + (b_2 \\pm e_{b_2})t^2 Where m_{fit\\ type} represents the magnitude, meanwhile a_0 , a_1 , b_0 , b_1 and b_2 are the coefficients of each adjust; e_{a_0} , e_{a_1} , e_{b_0} , e_{b_1} and e_{b_2} are the coefficient's errors. With these we obtain Q_1' and Q_2' for each adjust Q_1' = \\frac{a_1}{e_{a_1}} Q_2' = \\frac{b_2}{e_{a_2}} and indicators C_1 and C_2 C_1 = 1 - \\frac{DEFL}{DEP} C_2 = 1 - \\frac{DEFP}{DEFL} where DEP = \\sqrt{ \\sum_i^n \\frac{(y_i-\\bar{y})^2}{n}} DEFL = \\sqrt{ \\sum_i^n \\frac{(y_{i}^{lfit}-\\bar{y}^{lfit})^2}{n}} DEFP = \\sqrt{ \\sum_i^n \\frac{(y_{i}^{pfit}-\\bar{y}^{pfit})^2}{n}} are the magnitude, linear fit and parabolic fit standard deviation for each one.","title":"get_statistics(t,y)"},{"location":"features/#args","text":"t(np.narray) : The HJD data to analyze. y(np.narray) : The MAG data to analyze.","title":"Args"},{"location":"features/#returns","text":"list : Q1', C1, Q2' and C2, respectively.","title":"Returns"},{"location":"features/#get_ra_decdata","text":"get the right ascension and declination of the input data.","title":"get_ra_dec(data)"},{"location":"features/#args_1","text":"data(astropy.table.table.Table) : The data to analyze.","title":"Args"},{"location":"features/#returns_1","text":"tuple : The RA and DEC of data, respectively.","title":"Returns"},{"location":"filter/","text":"Filter Module There are functions to help to select the wanted data. grade_filter(data, grades) Found and return all the rows in data table that has a GRADE parameter in grades list. Args data(astropy.table.table.Table) : The data to filter, like the returning example shown in parser(data) . grades(list of str) : Some combination (or all) of A,B,C,D. Returns tuple : Data filtered containing only values with GRADE specified in grades. stars_Cfilter(data, ThC1=0.02, ThC2=0.02) Selects only the data's magnitudes that satisfy the conditions C_1 > \\text{ThC1} C_2 > \\text{ThC2} Args data(astropy.table.table.Table) : The light curve's data with the columns RA, DEC, C1 and C2, see features extraction module for more information about those parameters. ThC1 : The threshold number for C_1 , value by default: 0.02. ThC2 : The threshold number for C_2 , value by default: 0.02. Returns astropy.table.table.Table : The data filtered. stars_Qfilter(data, ThQ1=4, ThQ2=4) Selects only the data's magnitudes that satisfy the conditions Q_1 \\geq \\text{ThQ1} Q_2 \\geq \\text{ThQ2} Args data(astropy.table.table.Table) : The light curve's data with the columns RA, DEC, Q1 and Q2, see features extraction module for more information about those parameters. ThQ1 : The threshold number for Q_1 , value by default: 4. ThQ2 : The threshold number for Q_2 , value by default: 4. Returns astropy.table.table.Table : The data filtered.","title":"Filter"},{"location":"filter/#filter-module","text":"There are functions to help to select the wanted data.","title":"Filter Module"},{"location":"filter/#grade_filterdata-grades","text":"Found and return all the rows in data table that has a GRADE parameter in grades list.","title":"grade_filter(data, grades)"},{"location":"filter/#args","text":"data(astropy.table.table.Table) : The data to filter, like the returning example shown in parser(data) . grades(list of str) : Some combination (or all) of A,B,C,D.","title":"Args"},{"location":"filter/#returns","text":"tuple : Data filtered containing only values with GRADE specified in grades.","title":"Returns"},{"location":"filter/#stars_cfilterdata-thc1002-thc2002","text":"Selects only the data's magnitudes that satisfy the conditions C_1 > \\text{ThC1} C_2 > \\text{ThC2}","title":"stars_Cfilter(data, ThC1=0.02, ThC2=0.02)"},{"location":"filter/#args_1","text":"data(astropy.table.table.Table) : The light curve's data with the columns RA, DEC, C1 and C2, see features extraction module for more information about those parameters. ThC1 : The threshold number for C_1 , value by default: 0.02. ThC2 : The threshold number for C_2 , value by default: 0.02.","title":"Args"},{"location":"filter/#returns_1","text":"astropy.table.table.Table : The data filtered.","title":"Returns"},{"location":"filter/#stars_qfilterdata-thq14-thq24","text":"Selects only the data's magnitudes that satisfy the conditions Q_1 \\geq \\text{ThQ1} Q_2 \\geq \\text{ThQ2}","title":"stars_Qfilter(data, ThQ1=4, ThQ2=4)"},{"location":"filter/#args_2","text":"data(astropy.table.table.Table) : The light curve's data with the columns RA, DEC, Q1 and Q2, see features extraction module for more information about those parameters. ThQ1 : The threshold number for Q_1 , value by default: 4. ThQ2 : The threshold number for Q_2 , value by default: 4.","title":"Args"},{"location":"filter/#returns_2","text":"astropy.table.table.Table : The data filtered.","title":"Returns"},{"location":"preprocessing/","text":"Preprocessing Module The sets of functions here help from the perspective of preprocessing, complementing the module of data gathering and features extraction. high_photometric_errors(data, aperture='0') Found high photometric errors in MER, with \\bar{x} and \\sigma as mean and standard deviation of MER data array, respectively, based on error limit \\varepsilon_l = \\bar{x} + 3 \\sigma and the condition x_i \\geq \\varepsilon_l Args data({astropy.table.table.Table, np.array, astropy.table.column.Column}) : MER's Data to analyze. aperture(str) : Specific aperture in data to analyze, default='0'. Returns astropy.table.table.Table : Table with corresponding MER aperture analyzed. outliers_iqr(ys) Found magnitudes out of interquartile range (iqr) based on quartile 1 and quartile 3, q_1 and q_3 respectively, with iqr = q_3-q_1 and condition (ys > U_b)\\ or \\ (ys < L_b) where U_b = q_3+ 1.5iqr and L_b = q_1- 1.5iqr are the Upper bound and Lower bound, respectively. Args data({astropy.table.table.Table, np.array, astropy.table.column.Column}) : MER's Data to analyze. aperture(str)='0' : Specific aperture in data to analyze. Returns astropy.table.table.Table : Table with corresponding MER aperture analyzed. preprocessing(data, aperture) Analyze light curve's data with specific aperture, executing high_photometric_errors and outliers_iqr, filtering all the don't wanted values. Args data(astropy.table.table.Table) : Data table to analyze. aperture(str) : Specific aperture to analyze in data. Returns astropy.table.table.Table : Table with the specific aperture's data analyzed.","title":"Preprocessing"},{"location":"preprocessing/#preprocessing-module","text":"The sets of functions here help from the perspective of preprocessing, complementing the module of data gathering and features extraction.","title":"Preprocessing Module"},{"location":"preprocessing/#high_photometric_errorsdata-aperture0","text":"Found high photometric errors in MER, with \\bar{x} and \\sigma as mean and standard deviation of MER data array, respectively, based on error limit \\varepsilon_l = \\bar{x} + 3 \\sigma and the condition x_i \\geq \\varepsilon_l","title":"high_photometric_errors(data, aperture='0')"},{"location":"preprocessing/#args","text":"data({astropy.table.table.Table, np.array, astropy.table.column.Column}) : MER's Data to analyze. aperture(str) : Specific aperture in data to analyze, default='0'.","title":"Args"},{"location":"preprocessing/#returns","text":"astropy.table.table.Table : Table with corresponding MER aperture analyzed.","title":"Returns"},{"location":"preprocessing/#outliers_iqrys","text":"Found magnitudes out of interquartile range (iqr) based on quartile 1 and quartile 3, q_1 and q_3 respectively, with iqr = q_3-q_1 and condition (ys > U_b)\\ or \\ (ys < L_b) where U_b = q_3+ 1.5iqr and L_b = q_1- 1.5iqr are the Upper bound and Lower bound, respectively.","title":"outliers_iqr(ys)"},{"location":"preprocessing/#args_1","text":"data({astropy.table.table.Table, np.array, astropy.table.column.Column}) : MER's Data to analyze. aperture(str)='0' : Specific aperture in data to analyze.","title":"Args"},{"location":"preprocessing/#returns_1","text":"astropy.table.table.Table : Table with corresponding MER aperture analyzed.","title":"Returns"},{"location":"preprocessing/#preprocessingdata-aperture","text":"Analyze light curve's data with specific aperture, executing high_photometric_errors and outliers_iqr, filtering all the don't wanted values.","title":"preprocessing(data, aperture)"},{"location":"preprocessing/#args_2","text":"data(astropy.table.table.Table) : Data table to analyze. aperture(str) : Specific aperture to analyze in data.","title":"Args"},{"location":"preprocessing/#returns_2","text":"astropy.table.table.Table : Table with the specific aperture's data analyzed.","title":"Returns"}]}