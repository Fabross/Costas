{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Costas Library For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. When a \\ne 0 , there are two solutions to ax^2 + bx + c = 0 and they are x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.","title":"Home"},{"location":"#welcome-to-costas-library","text":"For full documentation visit mkdocs.org .","title":"Welcome to Costas Library"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. When a \\ne 0 , there are two solutions to ax^2 + bx + c = 0 and they are x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.","title":"Project layout"},{"location":"about/","text":"Peritura et clamare tremit vox vultu Caune Quid frontem genus sollertia adloquitur subito Lorem markdownum terram datae sunt levatus nodosaque ardebat arbor, alias. Cognosces caelum adest; annis, tum invia docebo virgo . Mundi siquid lacrimarum dicentem et adsuerat dextroque quaedam faciat saligno, altus! Nam tundunt viros, non campis, spes inque quoque. In manus Quam non iustius Hostibus in tibi sublimis flexit Ambagum est aliisque tremulo nutrit quod Forma doli Latoidos mihi quaedam fisso: vix es saepe si armataque. Creatas fluens! Fluunt inpressa rivi ferrum posito pastor superabitur maior, et donec adeo. Nec fratres sors quoque Aegyptia ab mixta liber: amoris caede furiis aut fido quam et tunc, quid. Fatorum licet iugulum pisa fugit minus mihi De nigro maturo veri, sors levis ecce manebat. Tellus septem mora, valentius densus victa duorum ad curvi mihi potuisse: per. Quaerebatque altus proxima sonat aevo plenissima sine; nec pulsant, inplicat tollens ducem et Libys et. Visa vixque est Arcas momordi relinquent: herba Daedale vagina Maenalon habent. Sic ille contigit lauro precatur iuventa cavernis est vestigia more. scrollingParallelUrl(vpi_hard_copyright + symbolic_exif_toolbar, 3 + 2 / bpsLeopard + wais); key -= 65; cameraZeroNat += namespace_alignment; if (cpsInstallSearch + 417099) { serp_ergonomics += duplex_operating_tweet; } log += web_ntfs_commercial; Si victrix, alioque dixit, probat oraque dum huius. Nunc recessu quaerere et delere comantur urbem raptam forte fata. Velox quid, se forte ruricolam Neretum o fecit conata dissimulare Venus murra cur classe erit incerti. Eventus animum aestu heu cumque, quod olivis sparsi partes linguae mollescat et plura . Vel poscis, caelestia sorore Scylla reliquit durare haec fraudat; loquentem. Coniuge deam Cuspide sacra gaudia , Ephyre sucoque: Priamo illa bicorni. Torque di nec reddit poni dissuadet violasse boum facerent constat, ripae forma. Hostem non Iovisque tangi, intra. Duce vanis auctor quater et virtute praelata ignes quotiensque Elide ! debugger_tablet_reality.in = adsl(binHoneypot(mouse, 18, phishingCardVlog + copyrightOnAddress)); printer.metal_graphics *= json_card_open(dockingVlogCrop(clipboard, vci_peopleware_footer) + workstation, wysiwygUserIndex( alertCrossplatformBounce, 21), e); hover(excel_visual - utf_processor, interlaced_adf + arraySocialSystem, scsi / pack_abend); Corporibus Iuli, vestigatque miserae possunt inquit tamen mavult innumeraeque esse et fratri texitur! Bracchia de Peleus Tritonida dedit constitit est intrarant anhelis obvia Musa Euandri, audax. Quadrupedes deos iuvencae. Pallor quae tum venabula, capellas et montes Hippocoon Achivos multa portus.","title":"About"},{"location":"about/#peritura-et-clamare-tremit-vox-vultu-caune","text":"","title":"Peritura et clamare tremit vox vultu Caune"},{"location":"about/#quid-frontem-genus-sollertia-adloquitur-subito","text":"Lorem markdownum terram datae sunt levatus nodosaque ardebat arbor, alias. Cognosces caelum adest; annis, tum invia docebo virgo . Mundi siquid lacrimarum dicentem et adsuerat dextroque quaedam faciat saligno, altus! Nam tundunt viros, non campis, spes inque quoque. In manus Quam non iustius Hostibus in tibi sublimis flexit Ambagum est aliisque tremulo nutrit quod Forma doli Latoidos mihi quaedam fisso: vix es saepe si armataque. Creatas fluens! Fluunt inpressa rivi ferrum posito pastor superabitur maior, et donec adeo. Nec fratres sors quoque Aegyptia ab mixta liber: amoris caede furiis aut fido quam et tunc, quid.","title":"Quid frontem genus sollertia adloquitur subito"},{"location":"about/#fatorum-licet-iugulum-pisa-fugit-minus-mihi","text":"De nigro maturo veri, sors levis ecce manebat. Tellus septem mora, valentius densus victa duorum ad curvi mihi potuisse: per. Quaerebatque altus proxima sonat aevo plenissima sine; nec pulsant, inplicat tollens ducem et Libys et. Visa vixque est Arcas momordi relinquent: herba Daedale vagina Maenalon habent. Sic ille contigit lauro precatur iuventa cavernis est vestigia more. scrollingParallelUrl(vpi_hard_copyright + symbolic_exif_toolbar, 3 + 2 / bpsLeopard + wais); key -= 65; cameraZeroNat += namespace_alignment; if (cpsInstallSearch + 417099) { serp_ergonomics += duplex_operating_tweet; } log += web_ntfs_commercial; Si victrix, alioque dixit, probat oraque dum huius. Nunc recessu quaerere et delere comantur urbem raptam forte fata. Velox quid, se forte ruricolam Neretum o fecit conata dissimulare Venus murra cur classe erit incerti. Eventus animum aestu heu cumque, quod olivis sparsi partes linguae mollescat et plura . Vel poscis, caelestia sorore Scylla reliquit durare haec fraudat; loquentem.","title":"Fatorum licet iugulum pisa fugit minus mihi"},{"location":"about/#coniuge-deam","text":"Cuspide sacra gaudia , Ephyre sucoque: Priamo illa bicorni. Torque di nec reddit poni dissuadet violasse boum facerent constat, ripae forma. Hostem non Iovisque tangi, intra. Duce vanis auctor quater et virtute praelata ignes quotiensque Elide ! debugger_tablet_reality.in = adsl(binHoneypot(mouse, 18, phishingCardVlog + copyrightOnAddress)); printer.metal_graphics *= json_card_open(dockingVlogCrop(clipboard, vci_peopleware_footer) + workstation, wysiwygUserIndex( alertCrossplatformBounce, 21), e); hover(excel_visual - utf_processor, interlaced_adf + arraySocialSystem, scsi / pack_abend); Corporibus Iuli, vestigatque miserae possunt inquit tamen mavult innumeraeque esse et fratri texitur! Bracchia de Peleus Tritonida dedit constitit est intrarant anhelis obvia Musa Euandri, audax. Quadrupedes deos iuvencae. Pallor quae tum venabula, capellas et montes Hippocoon Achivos multa portus.","title":"Coniuge deam"},{"location":"clustering/","text":"","title":"Clustering"},{"location":"crossmatching/","text":"","title":"Cross-matching"},{"location":"datadq/","text":"Data Acquisition Module Here are found the functions that help to gather the data from the source. parser(data) It filters the input list of strings with a pattern adjusted to the ASAS format '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME' saving all the values found to a structure, with the right ascension and declination, that is converted to a pd.DataFrame and returned. Args: data(list) : The list of strings of the text in a ASAS register. Returns: pd.DataFrame : The light curve's data information: DEC, FRAME,GRADE, HJD, MAG_0, MAG_1, MAG_2, MAG_3, MAG_4, MER_0, MER_1, MER_2, MER_3, MER_4 and RA. Example: The input data: [ '#nskip_4= 0\\n', '#ra= 17.000018 17:00:00.1\\n', '#dec= -24.121600 -24:07:17.8\\n', '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME\\n', ' 2140.48752 12.253 12.299 12.194 12.162 12.187 0.020 0.038 0.017 0.018 0.021 A 30120\\n', ' 2384.87500 11.893 11.977 11.846 11.806 11.814 0.018 0.034 0.019 0.021 0.024 A 773\\n', ' 2385.89474 11.916 12.083 11.843 11.807 11.784 0.034 0.057 0.032 0.034 0.040 D 984\\n'] The return: DEC FRAME GRADE HJD ... MER_3 MER_4 RA 0 -24.121600 -24:07:17.8 30120.0 A 2140.48752 ... 0.018 0.021 17.000018 17:00:00.1 1 -24.121600 -24:07:17.8 773.0 A 2384.87500 ... 0.021 0.024 17.000018 17:00:00.1 2 -24.121600 -24:07:17.8 984.0 D 2385.89474 ... 0.034 0.040 17.000018 17:00:00.1","title":"Data acquisition"},{"location":"datadq/#data-acquisition-module","text":"Here are found the functions that help to gather the data from the source.","title":"Data Acquisition Module"},{"location":"datadq/#parserdata","text":"It filters the input list of strings with a pattern adjusted to the ASAS format '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME' saving all the values found to a structure, with the right ascension and declination, that is converted to a pd.DataFrame and returned.","title":"parser(data)"},{"location":"datadq/#args","text":"data(list) : The list of strings of the text in a ASAS register.","title":"Args:"},{"location":"datadq/#returns","text":"pd.DataFrame : The light curve's data information: DEC, FRAME,GRADE, HJD, MAG_0, MAG_1, MAG_2, MAG_3, MAG_4, MER_0, MER_1, MER_2, MER_3, MER_4 and RA.","title":"Returns:"},{"location":"datadq/#example","text":"The input data: [ '#nskip_4= 0\\n', '#ra= 17.000018 17:00:00.1\\n', '#dec= -24.121600 -24:07:17.8\\n', '# HJD MAG_1 MAG_0 MAG_2 MAG_3 MAG_4 MER_1 MER_0 MER_2 MER_3 MER_4 GRADE FRAME\\n', ' 2140.48752 12.253 12.299 12.194 12.162 12.187 0.020 0.038 0.017 0.018 0.021 A 30120\\n', ' 2384.87500 11.893 11.977 11.846 11.806 11.814 0.018 0.034 0.019 0.021 0.024 A 773\\n', ' 2385.89474 11.916 12.083 11.843 11.807 11.784 0.034 0.057 0.032 0.034 0.040 D 984\\n'] The return: DEC FRAME GRADE HJD ... MER_3 MER_4 RA 0 -24.121600 -24:07:17.8 30120.0 A 2140.48752 ... 0.018 0.021 17.000018 17:00:00.1 1 -24.121600 -24:07:17.8 773.0 A 2384.87500 ... 0.021 0.024 17.000018 17:00:00.1 2 -24.121600 -24:07:17.8 984.0 D 2385.89474 ... 0.034 0.040 17.000018 17:00:00.1","title":"Example:"},{"location":"dimred/","text":"","title":"Dimensional reduction"},{"location":"features/","text":"","title":"Features extraction"},{"location":"preprocessing/","text":"Preprocessing Module The sets of functions here help from the perspective of preprocessing, complementing the module of data gathering and features extraction. high_photometric_errors(data) Found high photometric errors in MER, with \\bar{x} and \\sigma as mean and standard deviation of data array, respectively, based on error limit \\varepsilon_l = \\bar{x} + 3 \\sigma and the condition x_i \\geq \\varepsilon_l Args: data(np.narray) : MERs to analyze. Returns: np.narray : MER's index with high photometric errors. outliers_iqr(ys) Found magnitudes out of interquartile range (iqr) based on quartile 1 and quartile 3, q_1 and q_3 respectively, with iqr = q_3-q_1 and condition (ys > U_b)\\ or \\ (ys < L_b) where U_b = q_3+ 1.5iqr and L_b = q_1- 1.5iqr are the Upper bound and Lower bound, respectively. Args: data(np.narray) : MERs to analyze. Returns: np.narray : MER's index out of interquartile range. preprocessing(data, aperture) Analyze light curve's data with specific aperture, executing high_photometric_errors and outliers_iqr, filtering all the don't wanted values. Args: data(pd.DataFrame) : The data to analyze, like the returning example shown in parser(data) . aperture(str) : The index to analyze MAG_i, with i=0,1,2,3 . Returns: tuple : HJD and MAG_i values associated. grade_filter(data, grades) Found and return all the values in light curve's data that has a GRADE parameter in grades set. Args: data(pd.DataFrame) : The data to analyze, like the returning example shown in parser(data) . grades(list of str) : Some combination (or all) of A,B,C,D. Returns: tuple : Data filtered containing only values with GRADE specified in grades.","title":"Preprocessing"},{"location":"preprocessing/#preprocessing-module","text":"The sets of functions here help from the perspective of preprocessing, complementing the module of data gathering and features extraction.","title":"Preprocessing Module"},{"location":"preprocessing/#high_photometric_errorsdata","text":"Found high photometric errors in MER, with \\bar{x} and \\sigma as mean and standard deviation of data array, respectively, based on error limit \\varepsilon_l = \\bar{x} + 3 \\sigma and the condition x_i \\geq \\varepsilon_l","title":"high_photometric_errors(data)"},{"location":"preprocessing/#args","text":"data(np.narray) : MERs to analyze.","title":"Args:"},{"location":"preprocessing/#returns","text":"np.narray : MER's index with high photometric errors.","title":"Returns:"},{"location":"preprocessing/#outliers_iqrys","text":"Found magnitudes out of interquartile range (iqr) based on quartile 1 and quartile 3, q_1 and q_3 respectively, with iqr = q_3-q_1 and condition (ys > U_b)\\ or \\ (ys < L_b) where U_b = q_3+ 1.5iqr and L_b = q_1- 1.5iqr are the Upper bound and Lower bound, respectively.","title":"outliers_iqr(ys)"},{"location":"preprocessing/#args_1","text":"data(np.narray) : MERs to analyze.","title":"Args:"},{"location":"preprocessing/#returns_1","text":"np.narray : MER's index out of interquartile range.","title":"Returns:"},{"location":"preprocessing/#preprocessingdata-aperture","text":"Analyze light curve's data with specific aperture, executing high_photometric_errors and outliers_iqr, filtering all the don't wanted values.","title":"preprocessing(data, aperture)"},{"location":"preprocessing/#args_2","text":"data(pd.DataFrame) : The data to analyze, like the returning example shown in parser(data) . aperture(str) : The index to analyze MAG_i, with i=0,1,2,3 .","title":"Args:"},{"location":"preprocessing/#returns_2","text":"tuple : HJD and MAG_i values associated.","title":"Returns:"},{"location":"preprocessing/#grade_filterdata-grades","text":"Found and return all the values in light curve's data that has a GRADE parameter in grades set.","title":"grade_filter(data, grades)"},{"location":"preprocessing/#args_3","text":"data(pd.DataFrame) : The data to analyze, like the returning example shown in parser(data) . grades(list of str) : Some combination (or all) of A,B,C,D.","title":"Args:"},{"location":"preprocessing/#returns_3","text":"tuple : Data filtered containing only values with GRADE specified in grades.","title":"Returns:"},{"location":"starsclass/","text":"","title":"General stars classification"}]}